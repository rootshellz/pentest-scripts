#!/bin/bash

ARCH=$(uname -m)

echo "[+] Starting existing lair-framework install on Kali $ARCH"

cd ~/lair

# Mongodb - 27017/tcp
echo "[+] Starting mongodb (27017/tcp)"
./mongodb*/bin/mongod --dbpath=db --bind_ip=localhost --quiet --nounixsocket --replSet rs0 &
# Give DB time to start
sleep 5
./mongodb*/bin/mongo admin --eval 'rs.initiate({_id:"rs0", members: [{_id: 1, host: "localhost:27017"}]})'

# Lair App (in node.js / Meteor) - 11014/tcp
echo "[+] Running Lair App (11014/tcp)"
cd ~/lair/lair-app
# Select desired node
source ~/.bashrc
nvm use v6.10.0
# Set app environmental variables
export ROOT_URL=http://localhost
export PORT=11014
export MONGO_URL=mongodb://localhost:27017/lair
export MONGO_OPLOG_URL=mongodb://localhost:27017/local
node main.js 2>&1 | tee output.log &

# Lair API - 11015/tcp
cd ~/lair/lair-api
# Set API environmental variables
export MONGO_URL=mongodb://localhost:27017/lair
export API_LISTENER=localhost:11015
if [[ $ARCH = 'x86_64' ]]; then
	echo "[+] Starting Lair API 64-bit (11015/tcp)"
	./api-server_linux_amd64 &
elif [[ $ARCH = 'i686' ]] || [[ $ARCH = 'i386' ]]; then
	cd src
	echo "[+] Starting Lair API 32-bit (11015/tcp)"
	./bin/api-server &
else
	echo "[!] Bad architecture: $ARCH"
	exit -1
fi

# Caddy Reverse Proxy - 11013/tcp
echo "[+] Installing Caddy"
cd ~/lair/caddy
echo "[+] Starting Caddy (11013/tcp)"
./caddy_* --conf=Caddyfile &

# Prep Drones
# export LAIR_API_SERVER='https://$USERNAME:$PASSWORD@localhost:11013'
export PATH=$HOME/lair/drones:$PATH
export SHODAN_KEY='yourkeygoeshere'

echo "Started"
cat ~/lair/lair-app/creds.txt
echo "DONE"
